name: Delete workflow runs

on:
  workflow_dispatch:
  push:

jobs:
  delete-runs:
    runs-on: ubuntu-latest
    env:
      REPO_NAME: ${{ secrets.REPO_NAME }}
      REPO_TOKEN: ${{ secrets.REPO_TOKEN }}
      
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      
      - name: Delete workflow runs
        run: |
          npm install @octokit/rest
          node -e '
          const { Octokit } = require("@octokit/rest");
          
          async function deleteWorkflowRuns() {
            const octokit = new Octokit({ auth: process.env.REPO_TOKEN });
            const repoParts = process.env.GITHUB_REPOSITORY.split("/");
            const owner = repoParts[0];
            const repo = repoParts[1];
            
            // ワークフローのIDを取得
            const workflows = await octokit.actions.listRepoWorkflows({
              owner: owner,
              repo: repo,
            });
            const workflowIds = workflows.data.workflows.map(wf => wf.id);
            
            // 各ワークフローの実行履歴を削除
            for (const id of workflowIds) {
              const runs = await octokit.actions.listWorkflowRuns({
                owner: owner,
                repo: repo,
                workflow_id: id,
                per_page: 100, // 1ページあたりの最大数
              });
              
              // 実行履歴のIDを取得
              const runIds = runs.data.workflow_runs.map(run => run.id);
              
              // 各実行履歴を削除
              for (const runId of runIds) {
                await octokit.actions.deleteWorkflowRun({
                  owner: owner,
                  repo: repo,
                  run_id: runId,
                });
                console.log(`Deleted run ${runId}`);
              }
            }
          }
          
          deleteWorkflowRuns();
          '